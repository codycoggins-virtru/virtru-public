apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: cwft-publish-image-to-gcr-virtru-public
spec:
  entrypoint: publish-image-to-gcr
  templates:
  - name: publish-image-to-gcr
    inputs:
      artifacts:
      - name: repo-source
        path: /src
      parameters: 
      - name: buildImage
      - name: projectName
      - name: dockerTag
    container:
      image: "{{inputs.parameters.buildImage}}"
      command: [sh, -c]
      workingDir: "/src/{{inputs.parameters.projectName}}"
      args: ['
          /setup-build-env && 
          ls -la && 
		  pwd &&
          docker ps &&
          echo "$GCR_VIRTRU_PUBLIC_JSON_KEY" > /tmp/gcr_virtru_public_json_key.json &&
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcr_virtru_public_json_key.json &&
          echo "INFO: get credential helper" &&
          go get -u github.com/GoogleCloudPlatform/docker-credential-gcr &&
          which docker-credential-gcr &&
          echo "INFO: config" &&
          docker-credential-gcr config --token-source="env" &&
          docker-credential-gcr configure-docker &&
          echo "INFO: docker build and push" &&
          export TAG=3.3 &&
          export DEPLOYER_VERSION=3.3 &&
          export REGISTRY=gcr.io/virtru-public/staging/gateway &&
          docker build --no-cache --build-arg TAG="$TAG" --build-arg REGISTRY="$REGISTRY" \
            -t "$REGISTRY/deployer:$DEPLOYER_VERSION" -f dev.Dockerfile . &&
          docker push $REGISTRY/deployer:$DEPLOYER_VERSION
          ']
      env:
      - name: DOCKER_HOST
        value: "tcp://localhost:2375"
      - name: AWS_PROFILE
        value: mgmt
      envFrom:
      - secretRef:
          name: ci-secrets
      - configMapRef:
          name: ci-cm
    sidecars:
    - name: dind
      image: docker:19.03.13-dind
      env:
      - name: DOCKER_TLS_CERTDIR
        value: ""
      securityContext:
        privileged: true
      mirrorVolumeMounts: true

